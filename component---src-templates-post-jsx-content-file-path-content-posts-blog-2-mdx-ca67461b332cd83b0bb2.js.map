{"version":3,"file":"component---src-templates-post-jsx-content-file-path-content-posts-blog-2-mdx-ca67461b332cd83b0bb2.js","mappings":"sLAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,OAAQ,WACPC,EAAAA,EAAAA,MAAsBP,EAAMQ,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBR,EAAYG,GAAI,KAAM,sBAAuB,KAAMK,EAAAA,cAAoBR,EAAYI,EAAG,KAAMI,EAAAA,cAAoBR,EAAYK,OAAQ,KAAM,aACjN,CAKA,MAJA,SAAoBN,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOU,QAASC,GAAaT,OAAOC,OAAO,CAAC,GAAGI,EAAAA,EAAAA,MAAsBP,EAAMQ,YAC3E,OAAOG,EAAYF,EAAAA,cAAoBE,EAAWX,EAAOS,EAAAA,cAAoBV,EAAmBC,IAAUD,EAAkBC,EAC9H,E,qBCPAY,E,QAAAA,KACA,MAAMC,EAAa,CACjBC,KAAIA,EAAAA,IAEN,SAASC,EAAa,GAAkB,IAAlB,KAACC,EAAI,SAAEC,GAAS,EACpC,OAAOR,EAAAA,cAAoB,MAAO,CAChCS,UAAW,+BACVT,EAAAA,cAAoBU,EAAAA,EAAK,CAC1BC,SAAU,MACRX,EAAAA,cAAoB,MAAO,CAC7BS,UAAW,mEACVT,EAAAA,cAAoB,MAAO,CAC5BS,UAAW,qBACVT,EAAAA,cAAoB,MAAO,CAC5BS,UAAW,6CACVF,EAAKK,IAAIC,YAAYC,OAAQd,EAAAA,cAAoB,MAAO,CACzDS,UAAW,mCACRT,EAAAA,cAAoB,MAAO,CAC9BS,UAAW,eACVT,EAAAA,cAAoBe,EAAAA,GAAa,CAClChB,WAAYK,GACXI,IAAYR,EAAAA,cAAoB,MAAO,CACxCS,UAAW,gCACVF,EAAKK,IAAIC,YAAYG,OAC1B,CACe,SAASC,EAAiB1B,GACvC,OAAOS,EAAAA,cAAoBM,EAAcf,EAAOS,EAAAA,cAAoBkB,EAAqB3B,GAC3F,C,8FCDO,MAAM4B,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiBrB,GAC/B,MAAMsB,EAAoB,aAAiBF,GAG3C,OAAO,WAAc,IAEO,mBAAfpB,EACFA,EAAWsB,GAGb,IAAIA,KAAsBtB,IAChC,CAACsB,EAAmBtB,GACzB,CAGA,MAAMuB,EAAc,CAAC,EAQd,SAASP,GAAY,WAAChB,EAAU,SAAES,EAAQ,qBAAEe,IAEjD,IAAIC,EAWJ,OAREA,EADED,EAEsB,mBAAfxB,EACHA,EAAW,CAAC,GACZA,GAAcuB,EAEJF,EAAiBrB,GAG5B,gBACLoB,EAAWM,SACX,CAACC,MAAOF,GACRhB,EAEJ,C","sources":["webpack://my-portfolio/./content/posts/blog-2.mdx","webpack://my-portfolio/./src/templates/post.jsx","webpack://my-portfolio/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"Gatsby is the best\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"이건 되는데..\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/hyeonzii/Desktop/gatsby/my-portfolio/content/posts/blog-2.mdx\";\nimport React from 'react';\nimport {graphql} from 'gatsby';\nimport {MDXProvider} from '@mdx-js/react';\nimport {Link} from 'gatsby';\nimport Nav from '../Components/Header/Nav';\nimport {defineCustomElements as deckDeckGoHighlightElement} from '@deckdeckgo/highlight-code/dist/loader';\ndeckDeckGoHighlightElement();\nconst shortcodes = {\n  Link\n};\nfunction PageTemplate({data, children}) {\n  return React.createElement(\"div\", {\n    className: \"w-full h-full flex flex-col\"\n  }, React.createElement(Nav, {\n    category: \";\"\n  }), React.createElement(\"div\", {\n    className: \"overflow-y-auto flex flex-col justify-center items-center mt-28\"\n  }, React.createElement(\"div\", {\n    className: \"w-1/2 h-fit mt-12\"\n  }, React.createElement(\"div\", {\n    className: \"font-extrabold text-4xl text-h-blue mt-4 \"\n  }, data.mdx.frontmatter.title), React.createElement(\"div\", {\n    className: \"border-b-4 border-h-blue mt-4\"\n  })), React.createElement(\"div\", {\n    className: \"w-1/2 h-fit\"\n  }, React.createElement(MDXProvider, {\n    components: shortcodes\n  }, children)), React.createElement(\"div\", {\n    className: \"w-1/2 h-fit text-h-gray mt-4\"\n  }, data.mdx.frontmatter.date)));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PageTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n    query ($id: String!) {\n        mdx(id: { eq: $id }) {\n            frontmatter {\n                title\n                date\n            }\n        }\n    }\n`;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","strong","_provideComponents","components","React","wrapper","MDXLayout","deckDeckGoHighlightElement","shortcodes","Link","PageTemplate","data","children","className","Nav","category","mdx","frontmatter","title","MDXProvider","date","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}